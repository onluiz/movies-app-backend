service: movies-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline

custom:
  stage: ${opt:stage, self:provider.stage}
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    tmdbSecretKey: ${self:custom.environment.TMDB_SECRET_KEY}

functions:
  list:
    handler: functions/list.main
    events:
      - http:
          path: movies/upcoming
          method: get
          cors: true
          request:
            template:
              application/json:: '{ "page": "$input.params(''page'')" }'
  get:
    handler: functions/get.main
    events:
      - http:
          path: movies/{id}
          method: get
          cors: true
  search:
    handler: functions/search.main
    events:
      - http:
          path: movies
          method: get
          cors: true
          request:
            template:
              application/json:: '{ "query" : "$input.params(''query'')", "page": "$input.params(''page'')" }'

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}

